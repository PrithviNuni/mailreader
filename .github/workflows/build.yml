name: Build and Deploy to ECS

on:
  workflow_dispatch:
  push:
    branches:
      - mailreader
      - test1

env:
  CONTAINER_NAME: mailreader
  ECS_TASK_DEFINITION: ./task-definition.json
  ECS_SERVICE: mailreader                # set this to your Amazon ECS service name
  ECS_CLUSTER: mailreader

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: |
          mvn -B package --file pom.xml
          ls -altrh target/*
      
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Set IMAGE_URI for use later in the same job
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
      
      - name: Print IMAGE_URI
        run: echo "IMAGE_URI=${{ env.IMAGE_URI }}"

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Update task-definition.json with the image URI and role ARNs
        run: |
          jq --arg image_uri "${{ env.IMAGE_URI }}" \
             --arg execution_role_arn "${{ secrets.ECS_EXECUTION_ROLE_ARN }}" \
             --arg task_role_arn "${{ secrets.ECS_TASK_ROLE_ARN }}" \
             '.containerDefinitions[0].image = $image_uri | .executionRoleArn = $execution_role_arn | .taskRoleArn = $task_role_arn' \
             task-definition.json > updated-task-definition.json
          mv updated-task-definition.json task-definition.json
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def-1
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def-1.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
